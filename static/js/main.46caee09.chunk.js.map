{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","pages/HomePage/HomePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleList/PeopleList.tsx","api.ts","pages/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Navbar","role","HomePage","NotFoundPage","Loader","PersonLink","person","people","name","sex","born","died","fatherName","motherName","slug","findMother","find","findFather","classnames","PeopleList","personSlug","isError","length","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","setIsError","useParams","useEffect","fetchPeople","loadPeople","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"qQASaA,EAAwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACnC,cAAC,IAAD,CACEC,UACE,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CAC1C,8BAA+BD,GADjC,EAIFH,GAAIA,EANN,SAQGC,GATgC,ECNxBI,EAAY,kBACvB,qBACE,UAAQ,MACRH,UAAU,iCACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,KAAK,SAEzB,cAAC,EAAD,CAAaD,GAAG,UAAUC,KAAK,iBAXd,ECDZM,EAAe,kBAC1B,oBAAIL,UAAU,QAAd,sBAD0B,ECAfM,EAAmB,kBAC9B,oBAAIN,UAAU,QAAd,2BAD8B,E,6BCAnBO,G,MAAS,kBACpB,qBAAKP,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCQTQ,EAAuB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAE3CC,EAOEF,EAPFE,KACAC,EAMEH,EANFG,IACAC,EAKEJ,EALFI,KACAC,EAIEL,EAJFK,KACAC,EAGEN,EAHFM,WACAC,EAEEP,EAFFO,WACAC,EACER,EADFQ,KAGIC,EAAaR,EAChBS,MAAK,qBAAGR,OAAsCK,CAAzC,IAEFI,EAAaV,EAChBS,MAAK,qBAAGR,OAAsCI,CAAzC,IAER,OACE,qCACE,6BACE,cAAC,IAAD,CACEjB,GAAE,kBAAamB,GACfjB,UAAWqB,IAAW,CAAE,kBAA2B,MAART,IAF7C,SAIGD,MAIL,6BAAKC,IAEL,6BAAKC,IAEL,6BAAKC,IAEL,6BACGI,EAEG,cAAC,IAAD,CACEpB,GAAE,kBAAaoB,EAAWD,MAC1BjB,UAAWqB,IAAW,CACpB,kBAAuC,OAAV,OAAVH,QAAU,IAAVA,OAAA,EAAAA,EAAYN,OAHnC,SAMGI,IAGFA,GAAc,MAGrB,6BACGI,EAEG,cAAC,IAAD,CACEtB,GAAE,kBAAasB,EAAWH,MAD5B,SAGGF,IAGFA,GAAc,QAI1B,EC7DYO,EAAuB,SAAC,GAI9B,IAHLZ,EAGI,EAHJA,OACAa,EAEI,EAFJA,WAGA,OADI,EADJC,QAII,mBAAG,UAAQ,qBAAqBxB,UAAU,kBAA1C,kCAMCU,EAAOe,OASV,wBACE,UAAQ,cACRzB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGU,EAAOgB,KAAI,SAAAjB,GAAM,OAChB,oBAEE,UAAQ,SACRT,UAAWqB,IAAW,CACpB,yBAA0BE,IAAed,EAAOQ,OAJpD,SAOE,cAAC,EAAD,CACER,OAAQA,EACRC,OAAQA,KARLD,EAAOQ,KAFE,SAvBpB,mBAAG,UAAQ,kBAAX,8CAwCL,ECzDM,SAASU,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCPM,IAAMQ,EAAiB,WAC5B,MAA4BC,mBAAmB,IAA/C,mBAAO3B,EAAP,KAAe4B,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOb,EAAP,KAAgBiB,EAAhB,KACA,EAAsBC,cAAdzB,YAAR,MAAe,GAAf,EAmBA,OAjBA0B,qBAAU,WACR,IAAMC,EAAW,iDAAG,qGAClBJ,GAAa,GADK,kBAGSb,IAHT,OAGVkB,EAHU,OAKhBP,EAAUO,GALM,gDAOhBJ,GAAW,GAPK,yBAShBD,GAAa,GATG,4EAAH,qDAajBI,GACD,GAAE,IAGD,qCACE,oBAAI5C,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,sBAAf,SACGuC,EACG,cAAC,EAAD,IAEA,cAAC,EAAD,CACE7B,OAAQA,EACRa,WAAYN,EACZO,QAASA,UAQxB,EC3CYsB,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAM9C,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE+C,KAAK,IACLC,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CACED,KAAK,OACLC,QAAS,cAAC,IAAD,CAAUlD,GAAG,IAAImD,SAAO,MAGnC,eAAC,IAAD,CAAOF,KAAK,UAAZ,UACE,cAAC,IAAD,CACEA,KAAK,QACLC,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CACEE,OAAK,EACLF,QAAS,cAAC,EAAD,SAIb,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eA3BhB,ECCnBG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.46caee09.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink:FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={\n      ({ isActive }) => classNames('navbar-item', {\n        'has-background-grey-lighter': isActive,\n      })\n    }\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const Navbar:FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n\n        <PageNavLink to=\"/people\" text=\"People\" />\n\n      </div>\n    </div>\n  </nav>\n);\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classnames from 'classnames';\nimport { FC } from 'react';\nimport { Link, Link as NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person,\n  people: Person[],\n}\n\nexport const PersonLink:FC<Props> = ({ person, people }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n  } = person;\n\n  const findMother = people\n    .find(({ name: personName }) => personName === motherName);\n\n  const findFather = people\n    .find(({ name: personName }) => personName === fatherName);\n\n  return (\n    <>\n      <td>\n        <NavLink\n          to={`/people/${slug}`}\n          className={classnames({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </NavLink>\n      </td>\n\n      <td>{sex}</td>\n\n      <td>{born}</td>\n\n      <td>{died}</td>\n\n      <td>\n        {findMother\n          ? (\n            <Link\n              to={`/people/${findMother.slug}`}\n              className={classnames({\n                'has-text-danger': findMother?.sex === 'f',\n              })}\n            >\n              {motherName}\n            </Link>\n          )\n          : (motherName || '-')}\n      </td>\n\n      <td>\n        {findFather\n          ? (\n            <Link\n              to={`/people/${findFather.slug}`}\n            >\n              {fatherName}\n            </Link>\n          )\n          : (fatherName || '-')}\n      </td>\n    </>\n  );\n};\n","import { FC } from 'react';\nimport classnames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  people: Person[];\n  personSlug?: string;\n  isError?: boolean;\n}\n\nexport const PeopleList:FC<Props> = ({\n  people,\n  personSlug,\n  isError,\n}) => {\n  if (isError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  if (!people.length) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={classnames({\n              'has-background-warning': personSlug === person.slug,\n            })}\n          >\n            <PersonLink\n              person={person}\n              people={people}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../../components/Loader';\nimport { PeopleList } from '../../components/PeopleList';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types/Person';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      setIsLoading(true);\n      try {\n        const loadPeople = await getPeople();\n\n        setPeople(loadPeople);\n      } catch (err) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            ? <Loader />\n            : (\n              <PeopleList\n                people={people}\n                personSlug={slug}\n                isError={isError}\n              />\n            )}\n        </div>\n      </div>\n    </>\n\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"/people\">\n            <Route\n              path=\":slug\"\n              element={<PeoplePage />}\n            />\n            <Route\n              index\n              element={<PeoplePage />}\n            />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}